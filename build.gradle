apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'gradle-one-jar'

// Use Java 7 by default
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
// UTF-8 should be standard by now. So use it!
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


repositories {
    mavenCentral()
}
// Add Gradle OneJar Plugin, see https://github.com/rholder/gradle-one-jar
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

apply plugin: 'checkstyle'
checkstyle {
    ignoreFailures = true
    configFile = rootProject.file('codequality/checkstyle.xml')
}

// FindBugs
apply plugin: 'findbugs'
findbugs {
    ignoreFailures = true
}

// PMD
apply plugin: 'pmd'
//tasks.withType(Pmd) { reports.html.enabled true }

// Set our project variables
project.ext {
    deserver = '0.1.0'
}
dependencies {
    compile 'org.elasticsearch:elasticsearch:1.5.0'
    compile 'com.google.guava:guava:18.0'
    compile 'org.eclipse.jetty:jetty-servlet:9.2.10.v20150310'
    compile 'org.eclipse.jetty:jetty-server:9.2.10.v20150310'
    compile 'org.eclipse.jetty:jetty-jmx:9.2.10.v20150310'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.1'
    compile 'com.squarespace.jersey2-guice:jersey2-guice:0.5'
    compile 'com.google.inject.extensions:guice-servlet:4.0-beta5'

    compile 'org.apache.httpcomponents:httpcore:4.4'
    compile 'org.apache.httpcomponents:httpclient:4.4'


    compile 'org.glassfish.jersey.core:jersey-server:2.16'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.16'
    //needed for jersey 2.16
    compile 'org.glassfish.jersey.media:jersey-media-jaxb:2.16'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.16'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.16'

    compile 'org.glassfish.jersey.core:jersey-server:2.15'

    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'joda-time:joda-time:2.7'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'com.netflix.archaius:archaius-core:0.6.5'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.logback-extensions:logback-ext-loggly:0.1.2'
    compile 'ch.qos.logback.contrib:logback-json-classic:0.1.2'
    compile 'ch.qos.logback.contrib:logback-jackson:0.1.2'
    compile 'org.codehaus.janino:janino:2.6.1'
    compile 'org.codehaus.groovy:groovy-all:2.3.7'
    compile 'org.apache.lucene:lucene-expressions:4.10.2'
    compile 'com.netflix.hystrix:hystrix-core:1.4.1'
    compile 'com.netflix.hystrix:hystrix-metrics-event-stream:1.4.1'
    compile 'com.netflix.hystrix:hystrix-servo-metrics-publisher:1.4.1'
    compile 'com.netflix.servo:servo-core:0.8.3'
    compile 'com.google.guava:guava:18.0'
    compile 'org.projectlombok:lombok:1.16.2'
    compile 'com.netflix.feign:feign-core:8.1.0'
    compile 'com.netflix.feign:feign-jackson:8.1.0'
    testCompile 'junit:junit:latest.release'
}

mainClassName = "com.dailymotion.pixelle.deserver.StartServer"
task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

applicationName = "de"
applicationDefaultJvmArgs += "-Dfile.encoding=UTF-8"
applicationDefaultJvmArgs += "-server"
//applicationDefaultJvmArgs += "-verbose:class"
applicationDefaultJvmArgs += "-Xms1g"
applicationDefaultJvmArgs += "-Xmx2g"
applicationDefaultJvmArgs += "-Xss256k"

applicationDefaultJvmArgs += "-Djava.awt.headless=true"
applicationDefaultJvmArgs += "-Djava.net.preferIPv4Stack=true"

applicationDefaultJvmArgs += "-XX:+UseParNewGC"
applicationDefaultJvmArgs += "-XX:+UseConcMarkSweepGC"
applicationDefaultJvmArgs += "-XX:CMSInitiatingOccupancyFraction=75"
applicationDefaultJvmArgs += "-XX:+UseCMSInitiatingOccupancyOnly"
applicationDefaultJvmArgs += "-XX:+PrintGCDetails"
applicationDefaultJvmArgs += "-XX:+PrintGCTimeStamps"
applicationDefaultJvmArgs += "-XX:+PrintClassHistogram"
applicationDefaultJvmArgs += "-XX:+PrintTenuringDistribution"
applicationDefaultJvmArgs += "-XX:+PrintGCApplicationStoppedTime"
applicationDefaultJvmArgs += "-Xloggc:/var/log/elasticsearch/gc.log"
applicationDefaultJvmArgs += "-XX:+HeapDumpOnOutOfMemoryError"
applicationDefaultJvmArgs += "-XX:HeapDumpPath=/var/log/pxl-deserver-heapdump.hprof"
applicationDefaultJvmArgs += "-XX:+DisableExplicitGC"
applicationDefaultJvmArgs += "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
//enable jmx on port 8005 for prod env
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote"
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote.port=7199"
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote.rmi.port=7199"
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote.local.only=false"
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote.authenticate=false"
applicationDefaultJvmArgs += "-Dcom.sun.management.jmxremote.ssl=false"

task de(type: OneJar) {
    mainClass = 'com.dailymotion.pixelle.deserver.StartServer'
    archiveName = 'pxl-deserver.jar'
}

artifacts {
    archives de
}
